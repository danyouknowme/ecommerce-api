// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

const docTemplate = `{
    "basePath": "/api/v1",
    "consumes": [
      "application/json"
    ],
    "info": {
      "license": {
        "name": "ISC"
      },
      "title": "Ecommerce Api docs",
      "version": "1.0"
    },
    "paths": {
      "/products": {
        "get": {
          "operationId": "getAllProducts",
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "Response Status OK",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Product"
                }
              }
            }
          },
          "description": "Get the list of products in the store"
        }
      }
    },
    "produces": [
      "application/json"
    ],
    "swagger": "2.0",
    "securityDefinitions": {},
    "host": "localhost:5050",
    "definitions": {
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "description": "Id of the product",
            "type": "integer"
          },
          "title": {
            "description": "The name of the product",
            "type": "string"
          },
          "description": {
            "description": "The description of the product",
            "type": "string"
          },
          "imagePath": {
            "description": "Link to represent the image of the product",
            "type": "string"
          },
          "category": {
            "description": "The category of the product",
            "type": "string"
          },
          "price": {
            "description": "The price of the product",
            "type": "number"
          },
          "amount": {
            "description": "The remaining amount of the product",
            "type": "integer"
          }
        }
      }
    }
  }`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:5050",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Ecommerce Api docs",
	Description: "This is ecommerce api documentation",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(docTemplate)
	if err != nil {
		return docTemplate
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return docTemplate
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
